{
  "summary": "Checks that all data in the input files appear to have come from the same individual",
  "arguments": [
    {
      "summary": "Allow the use of duplicate reads in performing the comparison. Can be useful when duplicate marking has been overly aggressive and coverage is low.",
      "name": "--ALLOW_DUPLICATE_READS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "read one or more arguments files and add them to the command line",
      "name": "--arguments_file",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "specifies whether the Tumor-aware result should be calculated. These are time consuming and can roughly double the runtime of the tool. When crosschecking many groups not calculating the tumor-aware  results can result in a significant speedup.",
      "name": "--CALCULATE_TUMOR_AWARE_RESULTS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Compression level for all compressed files created (e.g. BAM and VCF).",
      "name": "--COMPRESSION_LEVEL",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to create an index when writing VCF or coordinate sorted BAM output.",
      "name": "--CREATE_INDEX",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to create an MD5 digest for any BAM or FASTQ files created.  ",
      "name": "--CREATE_MD5_FILE",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Specificies which data-type should be used as the basic comparison unit. Fingerprints from readgroups can be \"rolled-up\" to the LIBRARY, SAMPLE, or FILE level before being compared. Fingerprints from VCF can be be compared by SAMPLE or FILE.",
      "name": "--CROSSCHECK_BY",
      "synonyms": "NA",
      "type": "DataType",
      "required": "no",
      "fulltext": "",
      "defaultValue": "READGROUP",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "FILE"
        },
        {
          "summary": "",
          "name": "SAMPLE"
        },
        {
          "summary": "",
          "name": "LIBRARY"
        },
        {
          "summary": "",
          "name": "READGROUP"
        }
      ]
    },
    {
      "summary": "An argument that controls how crosschecking with both INPUT and SECOND_INPUT should occur. ",
      "name": "--CROSSCHECK_MODE",
      "synonyms": "NA",
      "type": "CrosscheckMode",
      "required": "no",
      "fulltext": "",
      "defaultValue": "CHECK_SAME_SAMPLE",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "In this mode, each sample in INPUT will only be checked against a single corresponding sample in SECOND_INPUT. If a corresponding sample cannot be found, the program will proceed, but report the missing samples and return the value specified in EXIT_CODE_WHEN_MISMATCH. The corresponding samples are those that equal each other, after possible renaming via INPUT_SAMPLE_MAP and SECOND_INPUT_SAMPLE_MAP. In this mode CROSSCHECK_BY must be SAMPLE.",
          "name": "CHECK_SAME_SAMPLE"
        },
        {
          "summary": "In this mode, each sample in INPUT will be checked against all the samples in SECOND_INPUT.",
          "name": "CHECK_ALL_OTHERS"
        }
      ]
    },
    {
      "summary": "When one or more mismatches between groups is detected, exit with this value instead of 0.",
      "name": "--EXIT_CODE_WHEN_MISMATCH",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "When all LOD score are zero, exit with this value.",
      "name": "--EXIT_CODE_WHEN_NO_VALID_CHECKS",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Expect all groups\u0027 fingerprints to match, irrespective of their sample names.  By default (with this value set to false), groups (readgroups, libraries, files, or samples) with different sample names are expected to mismatch, and those with the same sample name are expected to match. ",
      "name": "--EXPECT_ALL_GROUPS_TO_MATCH",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Google Genomics API client_secrets.json file path.",
      "name": "--GA4GH_CLIENT_SECRETS",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "client_secrets.json",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Assumed genotyping error rate that provides a floor on the probability that a genotype comes from the expected sample. Must be greater than zero. ",
      "name": "--GENOTYPING_ERROR_RATE",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0.01",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The file lists a set of SNPs, optionally arranged in high-LD blocks, to be used for fingerprinting. See https://software.broadinstitute.org/gatk/documentation/article?id\u003d9526 for details.",
      "name": "--HAPLOTYPE_MAP",
      "synonyms": "-H",
      "type": "File",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "display the help message",
      "name": "--help",
      "synonyms": "-h",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "One or more input files (or lists of files) with which to compare fingerprints.",
      "name": "--INPUT",
      "synonyms": "-I",
      "type": "List[String]",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "A tsv with two columns representing the sample as it should be used for comparisons to SECOND_INPUT (in the first column) and  the source file (in INPUT) for the fingerprint (in the second column). Need only to include the samples that change. Values in column 1 should be unique even in union with the remaining unmapped samples. Values in column 2 should be unique in the file. Will error if more than one sample is found in a file (multi-sample VCF) pointed to in column 2. Should only be used in the presence of SECOND_INPUT. ",
      "name": "--INPUT_SAMPLE_FILE_MAP",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "A tsv with two columns representing the sample as it appears in the INPUT data (in column 1) and the sample as it should be used for comparisons to SECOND_INPUT (in the second column). Need only include the samples that change. Values in column 1 should be unique. Values in column 2 should be unique even in union with the remaining unmapped samples. Should only be used with SECOND_INPUT. ",
      "name": "--INPUT_SAMPLE_MAP",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If any two groups (with the same sample name) match with a LOD score lower than the threshold the tool will exit with a non-zero code to indicate error. Program will also exit with an error if it finds two groups with different sample name that match with a LOD score greater than -LOD_THRESHOLD.\n\nLOD score 0 means equal likelihood that the groups match vs. come from different individuals, negative LOD score -N, mean 10^N time more likely that the groups are from different individuals, and +N means 10^N times more likely that the groups are from the same individual. ",
      "name": "--LOD_THRESHOLD",
      "synonyms": "-LOD",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The rate at which a heterozygous genotype in a normal sample turns into a homozygous (via loss of heterozygosity) in the tumor (model assumes independent events, so this needs to be larger than reality).",
      "name": "--LOSS_OF_HET_RATE",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0.5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Optional output file to write matrix of LOD scores to. This is less informative than the metrics output and only contains Normal-Normal LOD score (i.e. doesn\u0027t account for Loss of Heterozygosity). It is however sometimes easier to use visually.",
      "name": "--MATRIX_OUTPUT",
      "synonyms": "-MO",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Maximal effect of any single haplotype block on outcome (-log10 of maximal likelihood difference between the different values for the three possible genotypes).",
      "name": "--MAX_EFFECT_OF_EACH_HAPLOTYPE_BLOCK",
      "synonyms": "NA",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "3.0",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "When writing files that need to be sorted, this will specify the number of records stored in RAM before spilling to disk. Increasing this number reduces the number of file handles needed to sort the file, and increases the amount of RAM needed.",
      "name": "--MAX_RECORDS_IN_RAM",
      "synonyms": "NA",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "500000",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "The number of threads to use to process files and generate fingerprints.",
      "name": "--NUM_THREADS",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Optional output file to write metrics to. Default is to write to stdout.",
      "name": "--OUTPUT",
      "synonyms": "-O",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true then only groups that do not relate to each other as expected will have their LODs reported.",
      "name": "--OUTPUT_ERRORS_ONLY",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to suppress job-summary info on System.err.",
      "name": "--QUIET",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Reference sequence file.",
      "name": "--REFERENCE_SEQUENCE",
      "synonyms": "-R",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A tsv with two columns representing the individual with which each sample is associated.  The first column is the sample id, and the second column is the associated individual id.  Values in the first column must be unique.  If INPUT_SAMPLE_MAP or SECOND_INPUT_SAMPLE_MAP is also specified, then the values in the first column of this file should be the sample aliases specified in the second columns of INPUT_SAMPLE_MAP and SECOND_INPUT_SAMPLE_MAP, respectively.  When this input is specified, expectations for matches will be based on the equality or inequality of the individual ids associated with two samples, as opposed to the sample ids themselves.  Samples which are not listed in this file will have their sample id used as their individual id, for the purposes of match expectations.  This means that one sample id could be used as the individual id for another sample, but not included in the map itself, and these two samples would be considered to have come from the same individual.  Note that use of this parameter only affects labelling of matches and mismatches as EXPECTED or UNEXPECTED.  It has no affect on how data is grouped for crosschecking.",
      "name": "--SAMPLE_INDIVIDUAL_MAP",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "A second set of input files (or lists of files) with which to compare fingerprints. If this option is provided the tool compares each sample in INPUT with the sample from SECOND_INPUT that has the same sample ID. In addition, data will be grouped by SAMPLE regardless of the value of CROSSCHECK_BY. When operating in this mode, each sample in INPUT must also have a corresponding sample in SECOND_INPUT. If this is violated, the tool will proceed to check the matching samples, but report the missing samples and return a non-zero error-code.",
      "name": "--SECOND_INPUT",
      "synonyms": "-SI",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "A tsv with two columns representing the sample as it appears in the SECOND_INPUT data (in column 1) and the sample as it should be used for comparisons to INPUT (in the second column). Note that in case of unrolling files (file-of-filenames) one would need to reference the final file, i.e. the file that contains the genomic data. Need only include the samples that change. Values in column 1 should be unique. Values in column 2 should be unique even in union with the remaining unmapped samples. Should only be used with SECOND_INPUT. ",
      "name": "--SECOND_INPUT_SAMPLE_MAP",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "display hidden arguments",
      "name": "--showHidden",
      "synonyms": "-showHidden",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "advanced",
      "options": []
    },
    {
      "summary": "One or more directories with space available to be used by this program for temporary storage of working files",
      "name": "--TMP_DIR",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the JDK Deflater instead of the Intel Deflater for writing compressed output",
      "name": "--USE_JDK_DEFLATER",
      "synonyms": "-use_jdk_deflater",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the JDK Inflater instead of the Intel Inflater for reading compressed input",
      "name": "--USE_JDK_INFLATER",
      "synonyms": "-use_jdk_inflater",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Validation stringency for all SAM files read by this program.  Setting stringency to SILENT can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.",
      "name": "--VALIDATION_STRINGENCY",
      "synonyms": "NA",
      "type": "ValidationStringency",
      "required": "no",
      "fulltext": "",
      "defaultValue": "STRICT",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "STRICT"
        },
        {
          "summary": "",
          "name": "LENIENT"
        },
        {
          "summary": "",
          "name": "SILENT"
        }
      ]
    },
    {
      "summary": "Control verbosity of logging.",
      "name": "--VERBOSITY",
      "synonyms": "NA",
      "type": "LogLevel",
      "required": "no",
      "fulltext": "",
      "defaultValue": "INFO",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "ERROR"
        },
        {
          "summary": "",
          "name": "WARNING"
        },
        {
          "summary": "",
          "name": "INFO"
        },
        {
          "summary": "",
          "name": "DEBUG"
        }
      ]
    },
    {
      "summary": "display the version number for this tool",
      "name": "--version",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    }
  ],
  "description": "Checks that all data in the set of input files appear to come from the same\n individual. Can be used to compare according to readgroups, libraries, samples, or files.\n Operates on bams/sams and vcfs (including gvcfs).\n\n \u003ch3\u003eSummary\u003c/h3\u003e\n Checks if all the genetic data within a set of files appear to come from the same individual.\n It quickly determines whether a \"group\u0027s\" genotype matches that of an input SAM/BAM/VCF by selective sampling,\n and has been designed to work well even for low-depth SAM/BAMs.\n \u003cbr/\u003e\n The tool collects \"fingerprints\" (essentially genotype information from different parts of the genome)\n at the finest level available in the data (readgroup for SAM files\n and sample for VCF files) and then optionally aggregates it by library, sample or file, to increase power and provide\n results at the desired resolution. Output is in a \"Moltenized\" format, one row per comparison. The results will\n be emitted into a metric file for the class CrosscheckMetric.\n In this format the output will include the LOD score and also tumor-aware LOD score which can\n help assess identity even in the presence of a severe loss of heterozygosity with high purity (which could\n otherwise fail to notice that samples are from the same individual.)\n A matrix output is also available to facilitate visual inspection of crosscheck results.\n \u003cbr/\u003e\n Since there can be many rows of output in the metric file, we recommend the use of ClusterCrosscheckMetrics\n as a follow-up step to running CrosscheckFingerprints.\n \u003cbr/\u003e\n There are cases where one would like to identify a few groups out of a collection of many possible groups (say\n to link a bam to it\u0027s correct sample in a multi-sample vcf. In this case one would not case for the cross-checking\n of the various samples in the VCF against each other, but only in checking the identity of the bam against the various\n samples in the vcf. The #SECOND_INPUT is provided for this use-case. With #SECOND_INPUT provided, CrosscheckFingerprints\n does the following:\n \u003cil\u003e\n \u003cli\u003eaggregation of data happens independently for the input files in #INPUT and #SECOND_INPUT.\u003c/li\u003e\n \u003cli\u003eaggregation of data happens at the SAMPLE level.\u003c/li\u003e\n \u003cli\u003eeach samples from #INPUT will only be compared to that same sample in #INPUT.\u003c/li\u003e\n \u003cli\u003e#MATRIX_OUTPUT is disabled.\u003c/li\u003e\n \u003c/il\u003e\n \u003cbr/\u003e\n In some cases, the groups collected may not have any observations (calls for a vcf, reads for a bam) at fingerprinting sites, or a sample in INPUT may be missing from the SECOND_INPUT.\n These cases are handled as follows:  If running in CHECK_SAME_SAMPLES mode with INPUT and SECOND_INPUT, and either INPUT or SECOND_INPUT includes a sample\n not found in the other, or contains a sample with no observations at any fingerprinting sites, an error will be logged and the tool will return EXIT_CODE_WHEN_MISMATCH.\n In all other running modes, when any group which is being crosschecked does not have any observations at fingerprinting sites, a warning is logged.  As long as there is at least\n one comparison where both sides have observations at fingerprinting sites, the tool will return zero.  However, if all comparisons have at least one side with no observations\n at fingerprinting sites, an error will be logged and the tool will return EXIT_CODE_WHEN_NO_VALID_CHECKS.\n \u003ch3\u003eExamples\u003c/h3\u003e\n \u003ch4\u003eCheck that all the readgroups from a sample match each other:\u003c/h4\u003e\n \u003cpre\u003e\n     java -jar picard.jar CrosscheckFingerprints \\\n          INPUT\u003dsample.with.many.readgroups.bam \\\n          HAPLOTYPE_MAP\u003dfingerprinting_haplotype_database.txt \\\n          LOD_THRESHOLD\u003d-5 \\\n          OUTPUT\u003dsample.crosscheck_metrics\n \u003c/pre\u003e\n\n\n \u003ch4\u003eCheck that all the readgroups match as expected when providing reads from two samples from the same individual:\u003c/h4\u003e\n \u003cpre\u003e\n     java -jar picard.jar CrosscheckFingerprints \\\n          INPUT\u003dsample.one.with.many.readgroups.bam \\\n          INPUT\u003dsample.two.with.many.readgroups.bam \\\n          HAPLOTYPE_MAP\u003dfingerprinting_haplotype_database.txt \\\n          LOD_THRESHOLD\u003d-5 \\\n          EXPECT_ALL_GROUPS_TO_MATCH\u003dtrue \\\n          OUTPUT\u003dsample.crosscheck_metrics\n \u003c/pre\u003e\n\n\n \u003ch3\u003e Detailed Explanation\u003c/h3\u003e\n\n This tool calculates the LOD score for identity check between \"groups\" of data in the INPUT files as defined by\n the CROSSCHECK_BY argument. A positive value indicates that the data seems to have come from the same individual\n or, in other words the identity checks out. The scale is logarithmic (base 10), so a LOD of 6 indicates\n that it is 1,000,000 more likely that the data matches the genotypes than not. A negative value indicates\n that the data do not match. A score that is near zero is inconclusive and can result from low coverage\n or non-informative genotypes. Each group is assigned a sample identifier (for SAM this is taken from the SM tag in\n the appropriate readgroup header line, for VCF this is taken from the column label in the file-header.\n After combining all the data from the same \"group\" together, an all-against-all comparison is performed. Results are\n categorized a FingerprintResult enum: EXPECTED_MATCH, EXPECTED_MISMATCH, UNEXPECTED_MATCH, UNEXPECTED_MISMATCH,\n or AMBIGUOUS depending on the LOD score and on whether the sample identifiers of the groups agree: LOD scores that are\n less than LOD_THRESHOLD are considered mismatches, and those greater than -LOD_THRESHOLD are matches (between is ambiguous).\n If the sample identifiers are equal, the groups are expected to match. They are expected to mismatch otherwise.\n \u003cbr/\u003e\n\n The identity check makes use of haplotype blocks defined in the HAPLOTYPE_MAP file to enable it to have higher\n statistical power for detecting identity or swap by aggregating data from several SNPs in the haplotype block. This\n enables an identity check of samples with very low coverage (e.g. ~1x mean coverage).\n \u003cbr/\u003e\n When provided a VCF, the identity check looks at the PL, GL and GT fields (in that order) and uses the first one that\n it finds.",
  "name": "CrosscheckFingerprints (Picard)",
  "group": "Diagnostics and Quality Control",
  "beta": false,
  "experimental": false
}