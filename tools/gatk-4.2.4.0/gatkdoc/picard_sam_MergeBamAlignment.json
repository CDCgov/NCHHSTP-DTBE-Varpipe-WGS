{
  "summary": "Merge alignment data from a SAM or BAM with data in an unmapped BAM file.  ",
  "arguments": [
    {
      "summary": "Adds the mate CIGAR tag (MC) if true, does not if false.",
      "name": "--ADD_MATE_CIGAR",
      "synonyms": "-MC",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Add PG tag to each read in a SAM or BAM",
      "name": "--ADD_PG_TAG_TO_READS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "SAM or BAM file(s) with alignment data.",
      "name": "--ALIGNED_BAM",
      "synonyms": "-ALIGNED",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to output only aligned reads.  ",
      "name": "--ALIGNED_READS_ONLY",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Use the aligner\u0027s idea of what a proper pair is rather than computing in this program.",
      "name": "--ALIGNER_PROPER_PAIR_FLAGS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "read one or more arguments files and add them to the command line",
      "name": "--arguments_file",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Attributes from the alignment record that should be removed when merging.  This overrides ATTRIBUTES_TO_RETAIN if they share common tags.",
      "name": "--ATTRIBUTES_TO_REMOVE",
      "synonyms": "NA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Reserved alignment attributes (tags starting with X, Y, or Z) that should be brought over from the alignment data when merging.",
      "name": "--ATTRIBUTES_TO_RETAIN",
      "synonyms": "NA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Attributes on negative strand reads that need to be reversed.",
      "name": "--ATTRIBUTES_TO_REVERSE",
      "synonyms": "-RV",
      "type": "Set[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[OQ, U2]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Attributes on negative strand reads that need to be reverse complemented.",
      "name": "--ATTRIBUTES_TO_REVERSE_COMPLEMENT",
      "synonyms": "-RC",
      "type": "Set[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[E2, SQ]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to clip adapters where identified.",
      "name": "--CLIP_ADAPTERS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "For paired reads, clip the 3\u0027 end of each read if necessary so that it does not extend past the 5\u0027 end of its mate.  Reads are first soft clipped so that the 3\u0027 aligned end of each read does not extend past the 5\u0027 aligned end of its mate.  If HARD_CLIP_OVERLAPPING_READS is also true, then reads are additionally hard clipped so that the 3\u0027 unclipped end of each read does not extend past the 5\u0027 unclipped end of its mate.  Hard clipped bases and their qualities are stored in the XB and XQ tags, respectively.",
      "name": "--CLIP_OVERLAPPING_READS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Compression level for all compressed files created (e.g. BAM and VCF).",
      "name": "--COMPRESSION_LEVEL",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "5",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to create an index when writing VCF or coordinate sorted BAM output.",
      "name": "--CREATE_INDEX",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to create an MD5 digest for any BAM or FASTQ files created.  ",
      "name": "--CREATE_MD5_FILE",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "The expected orientation of proper read pairs. Replaces JUMP_SIZE",
      "name": "--EXPECTED_ORIENTATIONS",
      "synonyms": "-ORIENTATIONS",
      "type": "List[PairOrientation]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "FR"
        },
        {
          "summary": "",
          "name": "RF"
        },
        {
          "summary": "",
          "name": "TANDEM"
        }
      ]
    },
    {
      "summary": "Google Genomics API client_secrets.json file path.",
      "name": "--GA4GH_CLIENT_SECRETS",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "client_secrets.json",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, hard clipping will be applied to overlapping reads.  By default, soft clipping is used.",
      "name": "--HARD_CLIP_OVERLAPPING_READS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "display the help message",
      "name": "--help",
      "synonyms": "-h",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If false, do not write secondary alignments to output.",
      "name": "--INCLUDE_SECONDARY_ALIGNMENTS",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether the lane is bisulfite sequence (used when calculating the NM tag).",
      "name": "--IS_BISULFITE_SEQUENCE",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The expected jump size (required if this is a jumping library). Deprecated. Use EXPECTED_ORIENTATIONS instead",
      "name": "--JUMP_SIZE",
      "synonyms": "-JUMP",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "deprecated",
      "options": []
    },
    {
      "summary": "List of Sequence Records tags that must be equal (if present) in the reference dictionary and in the aligned file. Mismatching tags will cause an error if in this list, and a warning otherwise.",
      "name": "--MATCHING_DICTIONARY_TAGS",
      "synonyms": "NA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[M5, LN]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The maximum number of insertions or deletions permitted for an alignment to be included. Alignments with more than this many insertions or deletions will be ignored. Set to -1 to allow any number of insertions or deletions.",
      "name": "--MAX_INSERTIONS_OR_DELETIONS",
      "synonyms": "-MAX_GAPS",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "When writing files that need to be sorted, this will specify the number of records stored in RAM before spilling to disk. Increasing this number reduces the number of file handles needed to sort the file, and increases the amount of RAM needed.",
      "name": "--MAX_RECORDS_IN_RAM",
      "synonyms": "NA",
      "type": "Integer",
      "required": "no",
      "fulltext": "",
      "defaultValue": "500000",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If UNMAP_CONTAMINANT_READS is set, require this many unclipped bases or else the read will be marked as contaminant.",
      "name": "--MIN_UNCLIPPED_BASES",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "32",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Merged SAM or BAM file to write to.",
      "name": "--OUTPUT",
      "synonyms": "-O",
      "type": "File",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "DEPRECATED. This argument is ignored and will be removed.",
      "name": "--PAIRED_RUN",
      "synonyms": "-PE",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "deprecated",
      "options": []
    },
    {
      "summary": "Strategy for selecting primary alignment when the aligner has provided more than one alignment for a pair or fragment, and none are marked as primary, more than one is marked as primary, or the primary alignment is filtered out for some reason. For all strategies, ties are resolved arbitrarily.",
      "name": "--PRIMARY_ALIGNMENT_STRATEGY",
      "synonyms": "NA",
      "type": "PrimaryAlignmentStrategy",
      "required": "no",
      "fulltext": "",
      "defaultValue": "BestMapq",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "Expects that multiple alignments will be correlated with HI tag, and prefers the pair of alignments with the largest MAPQ, in the absence of a primary selected by the aligner.",
          "name": "BestMapq"
        },
        {
          "summary": "Prefers the alignment which maps the earliest base in the read. Note that EarliestFragment may not be used for paired reads.",
          "name": "EarliestFragment"
        },
        {
          "summary": "Appropriate for cases in which the aligner is not pair-aware, and does not output the HI tag. It simply picks the alignment for each end with the highest MAPQ, and makes those alignments primary, regardless of whether the two alignments make sense together.",
          "name": "BestEndMapq"
        },
        {
          "summary": "Appropriate for a non-pair-aware aligner. Picks the alignment pair with the largest insert size. If all alignments would be chimeric, it picks the alignments for each end with the best MAPQ. ",
          "name": "MostDistant"
        }
      ]
    },
    {
      "summary": "The command line of the program group (if not supplied by the aligned file).",
      "name": "--PROGRAM_GROUP_COMMAND_LINE",
      "synonyms": "-PG_COMMAND",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The name of the program group (if not supplied by the aligned file).",
      "name": "--PROGRAM_GROUP_NAME",
      "synonyms": "-PG_NAME",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The version of the program group (if not supplied by the aligned file).",
      "name": "--PROGRAM_GROUP_VERSION",
      "synonyms": "-PG_VERSION",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The program group ID of the aligner (if not supplied by the aligned file).",
      "name": "--PROGRAM_RECORD_ID",
      "synonyms": "-PG",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to suppress job-summary info on System.err.",
      "name": "--QUIET",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "SAM or BAM file(s) with alignment data from the first read of a pair.",
      "name": "--READ1_ALIGNED_BAM",
      "synonyms": "-R1_ALIGNED",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The number of bases trimmed from the beginning of read 1 prior to alignment",
      "name": "--READ1_TRIM",
      "synonyms": "-R1_TRIM",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "SAM or BAM file(s) with alignment data from the second read of a pair.",
      "name": "--READ2_ALIGNED_BAM",
      "synonyms": "-R2_ALIGNED",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The number of bases trimmed from the beginning of read 2 prior to alignment",
      "name": "--READ2_TRIM",
      "synonyms": "-R2_TRIM",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Reference sequence file.",
      "name": "--REFERENCE_SEQUENCE",
      "synonyms": "-R",
      "type": "File",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "display hidden arguments",
      "name": "--showHidden",
      "synonyms": "-showHidden",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "advanced",
      "options": []
    },
    {
      "summary": "The order in which the merged reads should be output.",
      "name": "--SORT_ORDER",
      "synonyms": "-SO",
      "type": "SortOrder",
      "required": "no",
      "fulltext": "",
      "defaultValue": "coordinate",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "unsorted"
        },
        {
          "summary": "",
          "name": "queryname"
        },
        {
          "summary": "",
          "name": "coordinate"
        },
        {
          "summary": "",
          "name": "duplicate"
        },
        {
          "summary": "",
          "name": "unknown"
        }
      ]
    },
    {
      "summary": "One or more directories with space available to be used by this program for temporary storage of working files",
      "name": "--TMP_DIR",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Detect reads originating from foreign organisms (e.g. bacterial DNA in a non-bacterial sample),and unmap + label those reads accordingly.",
      "name": "--UNMAP_CONTAMINANT_READS",
      "synonyms": "-UNMAP_CONTAM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Original SAM or BAM file of unmapped reads, which must be in queryname order.  Reads MUST be unmapped.",
      "name": "--UNMAPPED_BAM",
      "synonyms": "-UNMAPPED",
      "type": "File",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "How to deal with alignment information in reads that are being unmapped (e.g. due to cross-species contamination.) Currently ignored unless UNMAP_CONTAMINANT_READS \u003d true. Note that the DO_NOT_CHANGE strategy will actually reset the cigar and set the mapping quality on unmapped reads since otherwisethe result will be an invalid record. To force no change use the DO_NOT_CHANGE_INVALID strategy.",
      "name": "--UNMAPPED_READ_STRATEGY",
      "synonyms": "NA",
      "type": "UnmappingReadStrategy",
      "required": "no",
      "fulltext": "",
      "defaultValue": "DO_NOT_CHANGE",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "COPY_TO_TAG"
        },
        {
          "summary": "",
          "name": "DO_NOT_CHANGE"
        },
        {
          "summary": "",
          "name": "DO_NOT_CHANGE_INVALID"
        },
        {
          "summary": "",
          "name": "MOVE_TO_TAG"
        }
      ]
    },
    {
      "summary": "Use the JDK Deflater instead of the Intel Deflater for writing compressed output",
      "name": "--USE_JDK_DEFLATER",
      "synonyms": "-use_jdk_deflater",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the JDK Inflater instead of the Intel Inflater for reading compressed input",
      "name": "--USE_JDK_INFLATER",
      "synonyms": "-use_jdk_inflater",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Validation stringency for all SAM files read by this program.  Setting stringency to SILENT can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.",
      "name": "--VALIDATION_STRINGENCY",
      "synonyms": "NA",
      "type": "ValidationStringency",
      "required": "no",
      "fulltext": "",
      "defaultValue": "STRICT",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "STRICT"
        },
        {
          "summary": "",
          "name": "LENIENT"
        },
        {
          "summary": "",
          "name": "SILENT"
        }
      ]
    },
    {
      "summary": "Control verbosity of logging.",
      "name": "--VERBOSITY",
      "synonyms": "NA",
      "type": "LogLevel",
      "required": "no",
      "fulltext": "",
      "defaultValue": "INFO",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "ERROR"
        },
        {
          "summary": "",
          "name": "WARNING"
        },
        {
          "summary": "",
          "name": "INFO"
        },
        {
          "summary": "",
          "name": "DEBUG"
        }
      ]
    },
    {
      "summary": "display the version number for this tool",
      "name": "--version",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    }
  ],
  "description": "\u003ch3\u003eSummary\u003c/h3\u003e\n A command-line tool for merging BAM/SAM alignment info from a third-party aligner with the data in an\n unmapped BAM file, producing a third BAM file that has alignment data (from the aligner) and all the remaining\n data from the unmapped BAM.\n\n Quick note: this is \u003cb\u003enot\u003c/b\u003e a tool for taking multiple sam files and creating a bigger file by merging them. For\n that use-case, see MergeSamFiles.\n\n \u003ch3\u003eDetails\u003c/h3\u003e\n Many alignment tools (still!) require fastq format input. The unmapped bam may contain useful information that will\n be lost in the conversion to fastq (meta-data like sample alias, library, barcodes, etc., and read-level tags.)\n\n This tool takes an unaligned bam with meta-data, and the aligned bam produced by calling SamToFastq and\n then passing the result to an aligner/mapper. It produces a new SAM file that includes all aligned and unaligned reads\n and also carries forward additional read attributes from the unmapped BAM (attributes that are otherwise lost in the\n process of converting to fastq). The resulting file will be valid for use by Picard and GATK tools.\n\n The output may be coordinate-sorted, in which case the tags, NM, MD, and UQ will be calculated and populated, or\n query-name sorted, in which case the tags will not be calculated or populated.\n\n \u003ch3\u003eUsage example:\u003c/h3\u003e\n \u003cpre\u003e\n java -jar picard.jar MergeBamAlignment \\\\\n      ALIGNED\u003daligned.bam \\\\\n      UNMAPPED\u003dunmapped.bam \\\\\n      O\u003dmerge_alignments.bam \\\\\n      R\u003dreference_sequence.fasta\n \u003c/pre\u003e\n\n\n \u003ch3\u003eCaveats\u003c/h3\u003e\n This tool has been developing for a while and many arguments have been added to it over the years.\n You may be particularly interested in the following (partial) list:\n \u003cul\u003e\n     \u003cli\u003eCLIP_ADAPTERS -- Whether to (soft-)clip the ends of the reads that are identified as belonging to adapters\u003c/li\u003e\n     \u003cli\u003eIS_BISULFITE_SEQUENCE -- Whether the sequencing originated from bisulfite sequencing, in which case NM will be\n     calculated differently\u003c/li\u003e\n     \u003cli\u003eALIGNER_PROPER_PAIR_FLAGS -- Use if the aligner that was used cannot be trusted to set the \"Proper pair\" flag\n     and then the tool will set this flag based on orientation and distance between pairs.\u003c/li\u003e\n     \u003cli\u003eADD_MATE_CIGAR -- Whether to use this opportunity to add the MC tag to each read.\u003c/li\u003e\n     \u003cli\u003eUNMAP_CONTAMINANT_READS (and MIN_UNCLIPPED_BASES) -- Whether to identify extremely short alignments (with\n     clipping on both sides) as cross-species contamination and unmap the reads.\u003c/li\u003e\n \u003c/ul\u003e",
  "name": "MergeBamAlignment (Picard)",
  "group": "Read Data Manipulation",
  "beta": false,
  "experimental": false
}